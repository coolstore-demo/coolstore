apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: catalog-pipeline
spec:
  params:
  - default: 1.0.0
    name: IMAGE_TAG
    type: string
  - default: registry-quay-quay-operator.${SUB_DOMAIN}/coolstore/catalog-spring-boot
    name: IMAGE_NAME
    type: string
  - default: https://gitea-gitea.${SUB_DOMAIN}/user1/catalog-spring-boot.git
    name: GIT_REPO
    type: string
  - default: main
    name: GIT_BRANCH
    type: string
  - default: https://gitea-gitea.${SUB_DOMAIN}/user1/coolstore.git
    name: MANIFESTS_GIT_REPO
    type: string
  - default: main
    name: MANIFESTS_GIT_BRANCH
    type: string
  tasks:
  - name: git-clone
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_BRANCH)
    - name: submodules
      value: "true"
    - name: depth
      value: "1"
    - name: sslVerify
      value: "true"
    - name: crtFileName
      value: ca-bundle.crt
    - name: deleteExisting
      value: "true"
    - name: verbose
      value: "true"
    - name: gitInitImage
      value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:cadf614a6044ee37397de3abe7674827ecab225e7fac9fb123eff5473e2c4003
    - name: userHome
      value: /tekton/home
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: source
  - name: maven
    params:
    - name: GOALS
      value:
      - package
      - deploy
    - name: PROXY_PROTOCOL
      value: http
    - name: CONTEXT_DIR
      value: .
    runAfter:
    - git-clone
    taskRef:
      kind: ClusterTask
      name: maven
    workspaces:
    - name: maven-settings
      workspace: maven-settings
    - name: source
      workspace: source
  - name: code-analysis
    params:
      - name: GOALS
        value:
          - "sonar:sonar"
          - "-Pquality"
    runAfter:
      - maven
    taskRef:
      name: maven
      kind: ClusterTask
    workspaces:
    - name: maven-settings
      workspace: maven-settings
    - name: source
      workspace: source
  - name: buildah
    params:
    - name: IMAGE
      value: $(params.IMAGE_NAME):$(params.IMAGE_TAG)
    - name: BUILDER_IMAGE
      value: registry.redhat.io/rhel8/buildah@sha256:0a86ecbdfbe86e9d225b7fe4b090a0dd6d323f8afdfdf2bd933ff223ddb53320
    - name: STORAGE_DRIVER
      value: vfs
    - name: DOCKERFILE
      value: ./Dockerfile
    - name: CONTEXT
      value: .
    - name: TLSVERIFY
      value: "true"
    - name: FORMAT
      value: oci
    - name: SKIP_PUSH
      value: "false"
    runAfter:
    - code-analysis
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
    - name: source
      workspace: source
  - name: dev-git-update
    params:
    - name: GIT_REPOSITORY
      value: $(params.MANIFESTS_GIT_REPO)
    - name: GIT_REF
      value: $(params.MANIFESTS_GIT_BRANCH)
    - name: CURRENT_IMAGE
      value: quay.io/coolstore-demo/spring-boot-catalog
    - name: NEW_IMAGE
      value: registry-quay-quay-operator.${SUB_DOMAIN}/coolstore/catalog-spring-boot
    - name: NEW_DIGEST
      value: $(tasks.buildah.results.IMAGE_DIGEST)
    - name: KUSTOMIZATION_PATH
      value: demo/environments/overlays/dev
    runAfter:
    - buildah
    taskRef:
      kind: Task
      name: git-update-deployment
    workspaces:
    - name: workspace
      workspace: source
  - name: dev-gitops-sync
    taskRef:
      name: argocd-task-sync-and-wait
    runAfter:
      - dev-git-update
    params:
      - name: application_name
        value: coolstore-dev
  - name: stage-git-update
    params:
    - name: GIT_REPOSITORY
      value: $(params.MANIFESTS_GIT_REPO)
    - name: GIT_REF
      value: $(params.MANIFESTS_GIT_BRANCH)
    - name: CURRENT_IMAGE
      value: quay.io/coolstore-demo/quay.io/coolstore-demo/spring-boot-catalog
    - name: NEW_IMAGE
      value: registry-quay-quay-operator.${SUB_DOMAIN}/coolstore/catalog-spring-boot
    - name: NEW_DIGEST
      value: $(tasks.buildah.results.IMAGE_DIGEST)
    - name: KUSTOMIZATION_PATH
      value: demo/environments/overlays/stage
    runAfter:
    - dev-gitops-sync
    taskRef:
      kind: Task
      name: git-update-deployment
    workspaces:
    - name: workspace
      workspace: source
  - name: stage-gitops-sync
    taskRef:
      name: argocd-task-sync-and-wait
    runAfter:
      - stage-git-update
    params:
      - name: application_name
        value: coolstore-stage
  - name: acs-scan-image
    taskRef:
      name: rox-image-scan
      kind: Task
    runAfter:
      - buildah
    params:
      - name: output_format
        value: table
      - name: image
        value: $(params.IMAGE_NAME)@$(tasks.buildah.results.IMAGE_DIGEST)
    when:
      - input: "$(workspaces.acs-central.bound)"
        operator: in
        values: ["true"]
    workspaces:
      - name: acs-central
        workspace: acs-central
  - name: acs-check-image
    taskRef:
      name: rox-image-check
      kind: Task
    runAfter:
      - acs-scan-image
    params:
      - name: image
        value: $(params.IMAGE_NAME)@$(tasks.buildah.results.IMAGE_DIGEST)
    when:
      - input: "$(workspaces.acs-central.bound)"
        operator: in
        values: ["true"]
    workspaces:
      - name: acs-central
        workspace: acs-central
  workspaces:
  - name: source
  - name: maven-settings
  - name: acs-central
    optional: true
